url = "http://#{mensa_name}.sv-restaurant.ch/de/menuplan/"
doc = Nokogiri::HTML(open(url))

xml = ::Nokogiri::XML::Builder.new { |xml|
  xml.openmensa(version: "2.1", xmlns: "http://openmensa.org/open-mensa-v2", "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance", "xsi:schemaLocation": "http://openmensa.org/open-mensa-v2 http://openmensa.org/open-mensa-v2.xsd") {
    xml.version("5.04-4")
    xml.canteen {
      counter = 0

      days_el = doc.css(".menu-plan-tabs .menu-plan-grid")

      range = 0..(days_el.count-1)

      if (defined? amount_days)
        range = 0..(amount_days-1)
      end

      days_el[range].each do |day|

        date_string = doc.css(".day-nav .date")[counter]&.content.to_s + Date.today.year.to_s
        begin
          date = Date.strptime(date_string, "%d.%m.%Y")
        rescue ArgumentError => e
          date = "unkown"
          puts "DEBUG: date: #{date_string}"
        end
        counter += 1

        xml.day(date: date){

          day.css('.menu-item').each do |item|

            meal = item.css(".menu-title").first&.content.to_s
            prices = item.css(".price")
            description = item.css(".menu-description").first&.content&.gsub("\n\n", "\n")&.gsub("\n", " - ")

            if meal.length == 0
              meal = "Kein Menu Name"
            end

            if description.length == 0
              description = "Keine Beschreibung"
            end

            price_employees = 0.0
            price_others = 0.0

            prices.each do |p|
              if p.css("span").last&.content == "INT"
                price_employees = p.css("span").first&.content.to_s
              end

              if p.css("span").last&.content == "EXT"
                price_others = p.css("span").first&.content.to_s
              end
            end

            xml.category(name: "Gericht") {
              xml.meal{
                xml.name(meal)
                xml.note(description[0..249])
                unless price_employees == 0.0
                  xml.price(price_employees, role: "employee")
                end
                unless price_others == 0.0
                  xml.price(price_others, role: "other")
                end
              }
            }
          end
        }
      end
    }
  }
}
